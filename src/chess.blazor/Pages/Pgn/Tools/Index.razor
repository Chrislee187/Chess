@page "/pgn/tools"

    <div class="container-fluid">
        <h2>PGN Tools</h2>
        <p>
            To assist in validating the chess engine I acquired 350000+ historical chess games in <externala href="https://en.wikipedia.org/wiki/Portable_Game_Notation">PGN</externala> format. To be able to use this format I developed the following;
            <ul>
                <li>
                    PgnReader library - a .NET Standard assembly that can read PGN files and parse the contents in to .NET Objects
                    <br />PgnQuery command line app - a .NET Core console application that can read and filter the contents of multiple PGN files.
                    <br /><externala href="https://github.com/Chrislee187/pgn-tools/tree/master/src">Source code on github</externala>
                </li>
                <li>
                    Using the PgnReader code above a simple Blazor page to convert PGN to a JSON readable format. Uses client-side Blazor so processing is executed in the client's browser rather than any back-end resource.
                    <br /><a href="/pgn/convert">PGN Convert</a>
                    <br /><externala href="https://github.com/Chrislee187/Chess/tree/master/src/chess.blazor/Pages/Pgn/Conversion">Source code on github</externala>
                </li>
            </ul>
        </p>
        <p>
            
        </p>
        <h2>Backlog</h2>
        <p>
            In addition to the above tools, I also plan to create a Chess Game Library application that PGN files can be imported/exported from, queried, analysed and replayed. The ultimate goal is for a standalone app (current thinking is, running in <externala href="https://en.wikipedia.org/wiki/Electron_(software_framework)">Electron</externala>, for cross-platform compatability) that can be used to manage large PGN Libraries on your local machine.
        </p>
    </div>

