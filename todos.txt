Chess Engine
	More extensive testing of the engine by processing lots of PGN files


	PGN Handling
		More extensive testing by processing lots of PGN files
		Create PGNFile class, that models the metadata of the file more accurately
		Create PGNParser class that takes file/string/stream and returns IEnumerable<PGNFile> for each
		Create PGNPlayer class that plays the PGN through the chess-engine and produces a ChessGame result object.
		If algebraic valid in PGN?
			enhance import to support


CoreChess DB
============
	Console application to import, query, export chess games
	import
		PGNFiles, simple move lists in algebraic notation, uses metadata as game index when available
	query
		lots of complexity here, basic querying on meta-data
		move advanced querying based on movelists, boardstate
	export
		PGNFiles, move-by-move breakdowns with PGN comments etc.

	storage format
	==============
	Something without external install dependencies
	Wnat to be able to search on the movelists.

CoreChess Self-Learning
=======================
	Plays against itself using the DB to pick moves.
	Uses random moves when none found in DB
	Stores game results in DB for future reference

CoreChess Console App
=====================
	Can be used for two humans to play against each other on the console.
	Can replay a game from the DB
	Can be wired up to replace one the of the players with a non-human player (supply an assembly?)